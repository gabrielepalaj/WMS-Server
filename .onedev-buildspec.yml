version: 25
jobs:
- name: Push to Github
  steps:
  - !PushRepository
    name: github push
    remoteUrl: https://github.com/gabrielepalaj/WMS-Server.git
    userName: gabrielepalaj
    passwordSecret: githubtokenwms-server
    force: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  triggers:
  - !BranchUpdateTrigger {}
  - !TagCreateTrigger {}
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
- name: CI
  steps:
  - !CheckoutStep
    name: checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: detect build version
    runInContainer: true
    image: '@script:builtin:maven:determine-docker-image@'
    interpreter: !DefaultInterpreter
      commands:
      - echo "Detecting project version (may require some time while downloading maven dependencies)..."
      - echo $(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout) > buildVersion
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !SetBuildVersionStep
    name: set build version
    buildVersion: '@file:buildVersion@'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: run tests
    runInContainer: true
    image: '@script:builtin:maven:determine-docker-image@'
    interpreter: !DefaultInterpreter
      commands:
      - mvn clean test
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !PublishJUnitReportStep
    name: publish unit test report
    reportName: Unit Test
    filePatterns: '**/TEST-*.xml'
    condition: ALWAYS
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  caches:
  - key: maven-cache
    path: /root/.m2/repository
  timeout: 3600
- name: Release
  steps:
  - !CheckoutStep
    name: checkout
    cloneCredential: !DefaultCredential {}
    withLfs: false
    withSubmodules: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: detect build version
    runInContainer: true
    image: '@script:builtin:maven:determine-docker-image@'
    interpreter: !DefaultInterpreter
      commands:
      - echo "Detecting project version (may require some time while downloading maven dependencies)..."
      - echo $(mvn org.apache.maven.plugins:maven-help-plugin:3.1.0:evaluate -Dexpression=project.version -q -DforceStdout) > buildVersion
    useTTY: false
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !SetBuildVersionStep
    name: set build version
    buildVersion: '@file:buildVersion@'
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CommandStep
    name: build & deploy
    runInContainer: true
    image: '@script:builtin:maven:determine-docker-image@'
    interpreter: !DefaultInterpreter
      commands:
      - set -e
      - set -o pipefail
      - ''
      - buildVersion=@build_version@
    useTTY: true
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !PublishArtifactStep
    name: publish artifacts
    artifacts: '*.zip *.tar.gz ='
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  - !CloseMilestoneStep
    name: close milestone
    milestoneName: '@build_version@'
    accessTokenSecret: onedev-token
    condition: ALL_PREVIOUS_STEPS_WERE_SUCCESSFUL
  jobDependencies:
  - jobName: CI
    requireSuccessful: true
    artifacts: '**'
  retryCondition: never
  maxRetries: 3
  retryDelay: 30
  timeout: 3600
